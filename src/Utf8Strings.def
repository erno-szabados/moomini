DEFINITION MODULE Utf8Strings;

IMPORT Utf8;

(* 
   This module implements a limited set of operations on UTF-8 encoded strings.
   Collation and normalization is not implemented.
   Strings are represented as ARRAY OF CodePoint. 
 *)

TYPE 
   CodePoint = CARDINAL;
   String = ARRAY OF CodePoint;

(* Creates and returns a String type object from the provided raw byte representation. *)
PROCEDURE InitString (a: ARRAY OF CHAR) : String ;

(* 
   KillString - frees String, s, and its contents.
   NIL is returned.
*)
PROCEDURE KillString (s: String) : String;

(* Returns the number of code points in the string s. *)
PROCEDURE Length(s: String): CARDINAL;

(* Returns String a, after the contents of b have been appended. *)
PROCEDURE ConCat (a, b: String) : String;

(* Returns String a, after cp has been appended. *)
PROCEDURE ConCatCodePoint (a : String; cp: CodePoint) : String;

(* Assigns the contents of b to a, returning a. *)
PROCEDURE Assign(a, b : String) : String;

(* Returns s, after replacing all instances of from with to *)
PROCEDURE ReplaceCodePoint (s: String; from, to: CodePoint) : String;

(* Returns a copy of the string s. *)
PROCEDURE Dup(s: String): String;

(* 
  Returns TRUE if the two strings are equal, FALSE otherwise. 
  Performs a simple CodePoint-by-CodePoint comparison.
  Note: This does not handle collation or normalization.
  *)
PROCEDURE Equal(s1, s2: String): BOOLEAN;

(* Returns a new things that contains CodePoints from low to high. *)
PROCEDURE Slice (s: String; low, high: INTEGER) : String ;

(* Returns the index of the first occurrence of the passed codepoint in s.
   Search starts from o.
   -1 is returned if the codepoint is not found.
 *)
PROCEDURE Index (s: String; cp: CodePoint; o: CARDINAL) : INTEGER ;

(* Returns the index of the last occurrence of the passed codepoint in s.
   Search starts from o, executed left to right.
   -1 is returned if the codepoint is not found. 
 *)
PROCEDURE RIndex (s: String; cp: CodePoint; o: CARDINAL) : INTEGER 

END Utf8Strings.