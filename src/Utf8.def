DEFINITION MODULE Utf8;

(* This module implements UTF-8 encoding and utility procedures. *)

PROCEDURE CharLen(firstByte: CHAR): CARDINAL;
(* Returns the number of bytes in a UTF-8 character starting with firstByte *)
(* Returns 0 for an invalid byte sequence. *)

PROCEDURE IsValid(buf: ARRAY OF CHAR; len: CARDINAL): BOOLEAN;
(* Returns TRUE if buf[0..len-1] is valid UTF-8 *)

PROCEDURE HasBOM(buffer: ARRAY OF CHAR; len: CARDINAL): BOOLEAN;
(* Returns TRUE if buffer starts with a UTF-8 BOM (EF BB BF), otherwise returns FALSE. *)

PROCEDURE Encode(codePoint: CARDINAL; VAR buffer: ARRAY OF CHAR; index: CARDINAL; VAR bytesWritten: CARDINAL): BOOLEAN;
(* Converts a Unicode code point to UTF-8 and writes it to buffer at buffer[index].
   Returns TRUE if successful, FALSE if the code point is invalid or buffer is too small. *)

PROCEDURE NextChar(VAR byteArray: ARRAY OF CHAR; VAR index: CARDINAL; VAR codePoint: CARDINAL): BOOLEAN;
(* Reads the next UTF-8 character (code point) from a byte array, advances the index, and returns the code point.  *)
(* Returns FALSE if the end of the array is reached or an invalid sequence is encountered. *)

PROCEDURE PrevChar(VAR byteArray: ARRAY OF CHAR; VAR index: CARDINAL; VAR codePoint: CARDINAL): BOOLEAN;
(* Similar to NextChar but reads the previous code point by moving backward from the current index. *)
(* Returns FALSE if the start of the array is reached or an invalid sequence is encountered. *)

END Utf8.